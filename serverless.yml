service: flyonthewall

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  region: us-east-1

  environment:
    USER_TABLE: ${self:custom.userTableName}


functions:
  getCustomer:
    handler: >-
      fly_on_the_wall/lambda_handlers/customer_handlers.get_customer
    timeout: 30
    iamRoleStatementsName: >-
      ${self:service}-${self:provider.stage}-getCustomer
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
        Resource:
          - {"Fn::GetAtt": ["tenantTable", "Arn"]}
  createCustomer:
    handler: >-
      fly_on_the_wall/lambda_handlers/customer_handlers.create_customer
    timeout: 30
    iamRoleStatementsName: >-
      ${self:service}-${self:provider.stage}-createCustomer
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
        Resource:
          - {"Fn::GetAtt": ["tenantTable", "Arn"]}
  fleetScan:
    handler: >-
      fly_on_the_wall/lambda_handlers/fleetscan.scan
    timeout: 30
    iamRoleStatementsName: >-
      ${self:service}-${self:provider.stage}-fleetScan
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Query
          - dynamodb:Scan
        Resource:
          - {"Fn::GetAtt": ["tenantTable", "Arn"]}

  sendAlexaNotif:
    handler: >-
      fly_on_the_wall/lambda_handlers/notifications.send_alexa_notifs
    timeout: 30
    iamRoleStatementsName: >-
      ${self:service}-${self:provider.stage}-sendAlexaNotif
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Query
          - dynamodb:Scan
        Resource:
          - {"Fn::GetAtt": ["tenantTable", "Arn"]}

custom:
  userTableName: ${self:service}-userTable-${self:provider.stage}

  prune:
    automatic: true
    includeLayers: true
    number: 7

resources:
  Resources:
    tenantTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.userTableName}
        AttributeDefinitions:
          - AttributeName: customer_id
            AttributeType: S
        KeySchema:
          - AttributeName: customer_id
            KeyType: HASH
        ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

plugins:
  - serverless-python-requirements
  - serverless-iam-roles-per-function
  - serverless-prune-plugin
  - serverless-pseudo-parameters
  - serverless-scriptable-plugin